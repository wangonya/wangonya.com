#+title: Kadane's Algorithm
#+author: Kelvin Wangonya
#+date: 2021-12-02T08:25:49+03:00
#+tags[]: python algorithms

Useful in solving the
[[https://en.wikipedia.org/wiki/Maximum_subarray_problem][Maximum
subarray problem]].

*** Steps
    :PROPERTIES:
    :CUSTOM_ID: steps
    :END:

1. Initialize two variables: =max_sum = current_sum = 0=
2. Loop through numbers in list

   - Set =current_sum = max(0, current_sum + list[i])=
   - Set =max_sum = max(max_sum, current_sum)=

3. Return =max_sum=

*** Caveats [fn:1], [fn:2]
    :PROPERTIES:
    :CUSTOM_ID: caveats-1-2
    :END:

- Kadane's Algorithm requires at least one positive number, so an input
  of all negative numbers would be invalid.

#+begin_quote

  - If the array contains all non-negative numbers, then the problem is
    trivial; a maximum subarray is the entire array.
  - If the array contains all non-positive numbers, then a solution is
    any subarray of size 1 containing the maximal value of the array (or
    the empty subarray (which has sum 0), if it is permitted).
  - Several different sub-arrays may have the same maximum sum.
#+end_quote

*** Solving [[https://leetcode.com/problems/best-time-to-buy-and-sell-stock/][Best Time to Buy and Sell Stock]] with Kadane's Algorithm
    :PROPERTIES:
    :CUSTOM_ID: solving-best-time-to-buy-and-sell-stock-with-kadanes-algorithm
    :END:
Slightly tweak the algorithm to track max profit and min price.

#+begin_src python
  def maxProfit(self, prices: List[int]) -> int:
      max_profit, min_price = 0, float("inf")
      for price in prices:
          min_price = min(min_price, price)
          max_profit = max(max_profit, price - min_price)
      return max_profit
#+end_src

[fn:1] [[https://en.wikipedia.org/wiki/Maximum_subarray_problem][Wikipedia:
       Maximum subarray problem]]

[fn:2] [[https://stackoverflow.com/questions/9942228/kadane-algorithm-negative-numbers][SO:
       Kadane Algorithm Negative Numbers]]
