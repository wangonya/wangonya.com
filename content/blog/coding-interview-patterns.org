#+title: Coding interview question patterns
#+author: Kelvin Wangonya
#+date: <2022-03-24 Thu>
#+tags[]: cheatsheet reference
#+draft: true

Implementing an idea I got from [[https://www.youtube.com/watch?v=SVvr3ZjtjI8][this]] video.

** [[https://leetcode.com/problem-list/top-interview-questions/][Top Interview Questions]]

| Problem         | Tags                         | Notes                                                    |
|-----------------+------------------------------+----------------------------------------------------------|
| [[https://leetcode.com/problems/two-sum/][Two Sum]]         | array, hash table            | track =num:idx= in dict, check if =target - nums= exists |
| [[https://leetcode.com/problems/add-two-numbers/][Add Two Numbers]] | linked list, math, recursion | -                                                        |


# | [[https://leetcode.com/problems/best-time-to-buy-and-sell-stock/][Best Time to Buy and Sell Stock]] | lists, dp             | [[https://wangonya.com/blog/kadanes-algorithm/][Kadane's Algorithm]]                                                              |
# | [[https://leetcode.com/problems/contains-duplicate/][Contains Duplicate]]              | lists, dicts, sorting | list -> set and compare lengths / loop while adding to dict and check existence |
# | [[https://app.codility.com/programmers/lessons/2-arrays/cyclic_rotation/][CyclicRotation]]                  | lists                 | loop while =insert(0, pop())= / use [[https://docs.python.org/3/library/collections.html#collections.deque.rotate][=colections.deque.rotate=]]                   |
# | [[https://app.codility.com/programmers/lessons/2-arrays/odd_occurrences_in_array/][OddOccurrencesInArray]]           | lists                 | use [[https://docs.python.org/3/library/collections.html#collections.Counter][=Counter=]] + generator expression to get the key with an odd value           |
# | [[https://app.codility.com/programmers/lessons/3-time_complexity/frog_jmp/][FrogJmp]]                         | -                     | =math.ceil(distance / possible jumps)=                                          |
# | [[https://app.codility.com/programmers/lessons/3-time_complexity/perm_missing_elem/][PermMissingElem]]                 | lists                 | linear search with =enumerate=                                                  |
# | [[https://app.codility.com/programmers/lessons/3-time_complexity/tape_equilibrium/][TapeEquilibrium]]                 | lists                 | -                                                                               |
